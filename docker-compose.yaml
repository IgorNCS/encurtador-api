services:
  # Serviço do Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres-keycloak:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - postgres-keycloak
    networks:
      - app_network

  # Serviço PostgreSQL para o Keycloak
  postgres-keycloak:
    image: postgres:14
    container_name: keycloak-postgres
    environment:
      - POSTGRES_DB=keycloak # Banco de dados do Keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432" 
    networks:
      - app_network

  # Serviço PostgreSQL para o NestJS
  postgres-app:
    image: postgres:14
    container_name: app-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB} # Banco de dados do NestJS
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_app:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Porta diferente para evitar conflitos
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data_keycloak:
  postgres_data_app: